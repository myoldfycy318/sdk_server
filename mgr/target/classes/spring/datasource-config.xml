<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">


	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.max_active}" />
		<property name="initialSize" value="${jdbc.initial_size}" />
		<property name="maxWait" value="${jdbc.max_wait}" />
		<property name="minIdle" value="${jdbc.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>
	<bean id="testDataSource" parent="dataSource">
		<property name="url" value="${test.jdbc.url}" />
		<property name="username" value="${test.jdbc.username}" />
		<property name="password" value="${test.jdbc.password}" />
	
	</bean>
	<!-- 线上库 --> 		
	<bean id="dataSourceRule" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyHashRule">
		<property name="field" value="dbIndex"/>
		<property name="from" value="1"/>
		<property name="to" value="10"/>
		<property name="dataSourceKey" value="dataSource"/>
	</bean>

	<!-- 测试联调库--> 	
	<bean id="testDataSourceRule" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyHashRule">
		<property name="field" value="dbIndex"/>
		<property name="from" value="11"/>
		<property name="to" value="20"/>
		<property name="dataSourceKey" value="testDataSource"/>
	</bean>	
	<bean id="multiDataSource" class="com.dome.sdkserver.util.MultipleDatasource">
        <property name="targetDataSources">  
              <map key-type="java.lang.String">  
                 <entry key="dataSource" value-ref="dataSource"/>  
                 <entry key="testDataSource" value-ref="testDataSource"/>
              </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSource"/>  
    </bean>
    
    <bean id="dataSourceKeyDeterminer" class="com.qianbao.framework.datasource.impl.DefaultDataSourceKeyDeterminer">
		<property name="defaultDataSourceKey" value="dataSource"/>
		<property name="rules">
			<list>
				<ref bean="dataSourceRule"/>
				<ref bean="testDataSourceRule"/>					
			</list>
		</property>
	</bean>
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multiDataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:/mybatis/mapper/**/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dome.sdkserver.metadata.dao.mapper" />
		<!--  property name="markerInterface" value="com.dome.sdkserver.metadata.dao.IBaseMapper" /-->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="multiDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>